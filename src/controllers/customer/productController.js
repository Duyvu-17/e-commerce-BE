import Product from "../../models/Product.js";
import ProductItem from "../../models/ProductItem.js";
import ProductImage from "../../models/ProductImage.js";
import Category from "../../models/Category.js";

const productController = {
  // üõí L·∫•y danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m
  getAllProducts: async (req, res, next) => {
    try {
      const products = await Product.findAll({
        attributes: ["id", "name", "description"],
        include: [
          {
            model: ProductItem,
            as: "productItems",
            attributes: ["id", "sku", "price", "stock"],
            include: [
              {
                model: ProductImage,
                as: "productsImages",
                attributes: ["imageUrl"],
              },
            ],
          },
          {
            model: Category,
            as: "category",
            attributes: ["name", "image", "status"],
          },
        ],
      });

      if (!products || products.length === 0) {
        return res.status(200).json({
          status: "success",
          message: "Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o",
          data: [],
        });
      }

      res.status(200).json({ status: "success", data: products });
    } catch (error) {
      console.error("L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m:", error);
      return res.status(500).json({ status: "error", message: "L·ªói h·ªá th·ªëng, vui l√≤ng th·ª≠ l·∫°i sau" });
    }
  },

  // üîç L·∫•y th√¥ng tin chi ti·∫øt s·∫£n ph·∫©m theo ID
  getProductById: async (req, res, next) => {
    try {
      const productId = req.params.id;

      // Ki·ªÉm tra ID h·ª£p l·ªá
      if (!productId || isNaN(productId)) {
        return res.status(400).json({ status: "error", message: "ID s·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá" });
      }

      const product = await Product.findByPk(productId, {
        attributes: ["id", "name", "description"],
        include: [
          {
            model: ProductItem,
            as: "productItems",
            attributes: ["id", "sku", "price", "stock"],
            include: [
              {
                model: ProductImage,
                as: "productsImages",
                attributes: ["imageUrl"],
              },
            ],
          },
          {
            model: Category,
            as: "category",
            attributes: ["name", "image", "status"],
          },
        ],
      });

      if (!product) {
        return res.status(404).json({ status: "error", message: "S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i" });
      }

      if (product.productItems.length === 0) {
        return res.status(200).json({
          status: "success",
          message: "S·∫£n ph·∫©m n√†y ch∆∞a c√≥ bi·∫øn th·ªÉ",
          data: product,
        });
      }

      res.status(200).json({ status: "success", data: product });
    } catch (error) {
      console.error("L·ªói khi l·∫•y th√¥ng tin s·∫£n ph·∫©m:", error);
      return res.status(500).json({ status: "error", message: "L·ªói h·ªá th·ªëng, vui l√≤ng th·ª≠ l·∫°i sau" });
    }
  },
};

export default productController;
