const Category = require("../../models/Category")

// üìå L·∫•y danh s√°ch danh m·ª•c
exports.getCategories = async (req, res) => {
  try {
    const categories = await Category.findAll({
      attributes: ["id", "name", "image", "status", "createdAt"],
      order: [["createdAt", "DESC"]],
    });
    res.status(200).json(categories);
  } catch (error) {
    console.error("Error fetching categories:", error);
    res.status(500).json({ message: "L·ªói server khi l·∫•y danh m·ª•c" });
  }
};

// üìå L·∫•y chi ti·∫øt danh m·ª•c theo ID
exports.getCategoryById = async (req, res) => {
  try {
    const { id } = req.params;
    const category = await Category.findByPk(id, {
      attributes: ["id", "name", "image", "status", "createdAt"],
    });

    if (!category) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y danh m·ª•c" });
    }

    res.status(200).json(category);
  } catch (error) {
    console.error("Error fetching category:", error);
    res.status(500).json({ message: "L·ªói server khi l·∫•y th√¥ng tin danh m·ª•c" });
  }
};

// üìå T·∫°o danh m·ª•c m·ªõi
exports.createCategory = async (req, res) => {
  try {
    const { name, image, status } = req.body;

    if (!name) {
      return res.status(400).json({ message: "T√™n danh m·ª•c kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" });
    }

    const newCategory = await Category.create({ name, image, status });
    res.status(201).json({ message: "Danh m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫°o", category: newCategory });
  } catch (error) {
    console.error("Error creating category:", error);
    res.status(500).json({ message: "L·ªói server khi t·∫°o danh m·ª•c" });
  }
};

// üìå C·∫≠p nh·∫≠t danh m·ª•c
exports.updateCategory = async (req, res) => {
  try {
    const { id } = req.params;
    const { name, image, status } = req.body;

    const category = await Category.findByPk(id);
    if (!category) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y danh m·ª•c" });
    }

    await category.update({ name, image, status });
    res.status(200).json({ message: "C·∫≠p nh·∫≠t danh m·ª•c th√†nh c√¥ng", category });
  } catch (error) {
    console.error("Error updating category:", error);
    res.status(500).json({ message: "L·ªói server khi c·∫≠p nh·∫≠t danh m·ª•c" });
  }
};

// üìå X√≥a danh m·ª•c
exports.deleteCategory = async (req, res) => {
  try {
    const { id } = req.params;
    const category = await Category.findByPk(id);

    if (!category) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y danh m·ª•c" });
    }

    await category.destroy();
    res.status(200).json({ message: "X√≥a danh m·ª•c th√†nh c√¥ng" });
  } catch (error) {
    console.error("Error deleting category:", error);
    res.status(500).json({ message: "L·ªói server khi x√≥a danh m·ª•c" });
  }
};
